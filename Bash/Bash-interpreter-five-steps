Every time you run a script in Bash, it processes it from top to bottom line by line. For each
line the Bash interpreter always goes through a five-step process to interpret that line.

Step 1: Tokenisation

Once the shell receives a command line, it breaks the command line into tokens. This step is
called tokenisation. Token is defined as a sequence of characters that is considered as single
unit by the shell. The shell determines where a token starts and ends by looking for special
characters known as Metacharacters. Metacharacters in context of the shell are: |, &, ;, (), <>,
space, tab and newline. Shell uses these Metacharacters to break up the command line. After
breaking up a command line into tokens, Bash classifies them into either words or operators.
In Bash's context, a word is a token that does not contain an unquoted metacharacter. Operator
is a token that contains at least one unquoted metacharacter. Words never contain unquoted
metacharacters and operators always contain unquoted metacharacters. 

Step 2: Command Identification

Based on where words and operators are, shell moves on to identyfing 
