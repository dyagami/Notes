Every time you run a script in Bash, it processes it from top to bottom line by line. For each
line the Bash interpreter always goes through a five-step process to interpret that line.

Step 1: Tokenisation

Once the shell receives a command line, it breaks the command line into tokens. This step is
called tokenisation. Token is defined as a sequence of characters that is considered as single
unit by the shell. The shell determines where a token starts and ends by looking for special
characters known as Metacharacters. Metacharacters in context of the shell are: |, &, ;, (), <>,
space, tab and newline. Shell uses these Metacharacters to break up the command line. After
breaking up a command line into tokens, Bash classifies them into either words or operators.
In Bash's context, a word is a token that does not contain an unquoted metacharacter. Operator
is a token that contains at least one unquoted metacharacter. Words never contain unquoted
metacharacters and operators always contain unquoted metacharacters. There are two types of
Operators - Control Operators and Redirection Operators. Control Operators are used to control
how a command line is processed. Full list of Control Operators is:
- Newline	- ;;		- |
- ||		- ;&		- ;;&
- &		- |&		- &&
- (		- )		- ;

Redirection Operators tell Bash to do certain redirections of the data streams that are connected
to a command. A full list of redirection operators is:
- <		- >|		- >
- <<-		- <<		- <>
- >>		- >&		- <&

All Control Operators and Redirection Operators are made up of Metacharacters and only matter if
they're unquoted.


Step 2: Command Identification

Based on where words and operators are, shell moves on to Command Identifiation. The shell breaks
the command line up into either simple or compound commands. Simple commands are just a bunch of
individual words and each simple command is terminated by a control operator. Compound commands
provide bash with its programming constructs, such as if statements, for loops, etc. 

Step 3: Expansions

Bash then moves on to step 3 of its process where it performs any required expansions. This
includes all of the expansions in previous notes as well as some new types of expansions.

Step 4: Quote Removal

Bash removes supportive quotes, which were added to control how the command was interpreted.

Step 5: Redirection

In the fifth, final step, Bash performs any redirection.



After completing these five steps, Bash will perform command that is left over.
